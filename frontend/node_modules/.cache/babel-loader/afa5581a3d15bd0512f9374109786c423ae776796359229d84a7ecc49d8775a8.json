{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\frontend\\\\src\\\\pages\\\\Payment\\\\StripeWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport BookingPage from '../Booking';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_live_51Otnc3S6jivUUFNCjV9JH1ZzVB3xtTKoGOviUhuGHoCGrQl3C8EYyctta6OgM1GGIHLBDi5weeKg9KYdbc3TjyQ800ST0dEpOP');\nexport default function StripeWrapper() {\n  _s();\n  const [clientSecret, setClientSecret] = useState(null);\n  useEffect(() => {\n    const selectedAmount = 50; // e.g., $10.00 (in cents)\n    fetch('https://your-railway-app-name.up.railway.app/api/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: selectedAmount\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret)).catch(err => console.error('Failed to create payment intent:', err));\n  }, []);\n  const appearance = {\n    theme: 'stripe'\n  };\n  const options = {\n    clientSecret,\n    appearance,\n    paymentMethodCreation: 'manual' // ðŸ‘ˆ This disables Link\n  };\n  if (!clientSecret) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading payment...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    options: options,\n    children: /*#__PURE__*/_jsxDEV(BookingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(StripeWrapper, \"QR1BN/xH+QVywmIB3kjH7CM4sW4=\");\n_c = StripeWrapper;\nvar _c;\n$RefreshReg$(_c, \"StripeWrapper\");","map":{"version":3,"names":["React","useEffect","useState","loadStripe","Elements","BookingPage","jsxDEV","_jsxDEV","stripePromise","StripeWrapper","_s","clientSecret","setClientSecret","selectedAmount","fetch","method","headers","body","JSON","stringify","amount","then","res","json","data","catch","err","console","error","appearance","theme","options","paymentMethodCreation","children","fileName","_jsxFileName","lineNumber","columnNumber","stripe","_c","$RefreshReg$"],"sources":["C:/Projects/frontend/src/pages/Payment/StripeWrapper.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport BookingPage from '../Booking';\r\n\r\nconst stripePromise = loadStripe('pk_live_51Otnc3S6jivUUFNCjV9JH1ZzVB3xtTKoGOviUhuGHoCGrQl3C8EYyctta6OgM1GGIHLBDi5weeKg9KYdbc3TjyQ800ST0dEpOP');\r\n\r\nexport default function StripeWrapper() {\r\n  const [clientSecret, setClientSecret] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const selectedAmount = 50; // e.g., $10.00 (in cents)\r\n    fetch('https://your-railway-app-name.up.railway.app/api/create-payment-intent', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ amount: selectedAmount }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setClientSecret(data.clientSecret))\r\n      .catch(err => console.error('Failed to create payment intent:', err));\r\n  }, []);\r\n\r\n  const appearance = { theme: 'stripe' };\r\n\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n    paymentMethodCreation: 'manual' // ðŸ‘ˆ This disables Link\r\n  };\r\n\r\n  if (!clientSecret) return <div>Loading payment...</div>;\r\n\r\n  return (\r\n    <Elements stripe={stripePromise} options={options}>\r\n      <BookingPage />\r\n    </Elements>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,WAAW,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGL,UAAU,CAAC,6GAA6G,CAAC;AAE/I,eAAe,SAASM,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,EAAE,CAAC,CAAC;IAC3BC,KAAK,CAAC,wEAAwE,EAAE;MAC9EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEP;MAAe,CAAC;IACjD,CAAC,CAAC,CACCQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIZ,eAAe,CAACY,IAAI,CAACb,YAAY,CAAC,CAAC,CAChDc,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAG;IAAEC,KAAK,EAAE;EAAS,CAAC;EAEtC,MAAMC,OAAO,GAAG;IACdpB,YAAY;IACZkB,UAAU;IACVG,qBAAqB,EAAE,QAAQ,CAAC;EAClC,CAAC;EAED,IAAI,CAACrB,YAAY,EAAE,oBAAOJ,OAAA;IAAA0B,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvD,oBACE9B,OAAA,CAACH,QAAQ;IAACkC,MAAM,EAAE9B,aAAc;IAACuB,OAAO,EAAEA,OAAQ;IAAAE,QAAA,eAChD1B,OAAA,CAACF,WAAW;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf;AAAC3B,EAAA,CA9BuBD,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}