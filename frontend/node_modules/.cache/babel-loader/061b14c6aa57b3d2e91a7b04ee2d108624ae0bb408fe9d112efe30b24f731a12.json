{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: '👋 Hi there! I’m StudyBot. Ask me anything about Math, Science, or study-related topics!'\n  }]);\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setInput('');\n    try {\n      const response = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botReply = {\n        sender: 'bot',\n        text: data.reply || 'Hmm... I didn’t quite catch that. Can you try again?'\n      };\n      setMessages(prev => [...prev, botReply]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: '⚠️ Server error. Please try again later.'\n      }]);\n    }\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: \"\\uD83D\\uDCDA StudyBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask about algebra, physics, or any subject...\",\n          onKeyDown: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"5IsoAlNBfKSlbp9/rZTw+GiN7Ts=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","chatEndRef","sendMessage","trim","userMsg","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botReply","reply","err","_chatEndRef$current","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","ref","type","value","onChange","e","target","placeholder","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chatbot.css';\r\n\r\nexport default function Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: '👋 Hi there! I’m StudyBot. Ask me anything about Math, Science, or study-related topics!' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMsg = { sender: 'user', text: input };\r\n    setMessages(prev => [...prev, userMsg]);\r\n    setInput('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botReply = { sender: 'bot', text: data.reply || 'Hmm... I didn’t quite catch that. Can you try again?' };\r\n      setMessages(prev => [...prev, botReply]);\r\n    } catch (err) {\r\n      setMessages(prev => [...prev, { sender: 'bot', text: '⚠️ Server error. Please try again later.' }]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-box\">\r\n        <div className=\"chatbot-header\">📚 StudyBot</div>\r\n\r\n        <div className=\"chatbot-messages\">\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`chatbot-message ${msg.sender}`}>\r\n              <span>{msg.text}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </div>\r\n\r\n        <div className=\"chatbot-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Ask about algebra, physics, or any subject...\"\r\n            onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}