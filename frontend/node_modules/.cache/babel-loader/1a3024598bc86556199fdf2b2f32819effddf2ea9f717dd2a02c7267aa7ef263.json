{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./Chatbot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Chatbot(){const[messages,setMessages]=useState([{sender:'bot',text:'👋 Hi there! I’m MathSciLAB Bot. Ask me anything about Math, Science, or study-related topics!'}]);const[input,setInput]=useState('');const chatEndRef=useRef(null);const sendMessage=async()=>{if(!input.trim())return;const userMsg={sender:'user',text:input};setMessages(prev=>[...prev,userMsg]);setInput('');try{const response=await fetch('http://localhost:8000/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:input})});const data=await response.json();const botReply={sender:'bot',text:data.reply||'Hmm... I didn’t quite catch that. Can you try again?'};setMessages(prev=>[...prev,botReply]);}catch(err){setMessages(prev=>[...prev,{sender:'bot',text:'⚠️ Server error. Please try again later.'}]);}};useEffect(()=>{var _chatEndRef$current;(_chatEndRef$current=chatEndRef.current)===null||_chatEndRef$current===void 0?void 0:_chatEndRef$current.scrollIntoView({behavior:'smooth'});},[messages]);return/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-header\",children:\"\\uD83D\\uDCDA MathSciLAB\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-messages\",children:[messages.map((msg,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-message \".concat(msg.sender),children:/*#__PURE__*/_jsx(\"span\",{children:msg.text})},i)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask about algebra, physics, or any subject...\",onKeyDown:e=>e.key==='Enter'&&sendMessage()}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setMessages([{sender:'bot',text:'👋 Hi there! I’m MathSciLAB. Ask me anything about Math, Science, or study-related topics!'}]),children:\"Clear\"})]})]})});}","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","sender","text","input","setInput","chatEndRef","sendMessage","trim","userMsg","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botReply","reply","err","_chatEndRef$current","current","scrollIntoView","behavior","className","children","map","msg","i","concat","ref","type","value","onChange","e","target","placeholder","onKeyDown","key","onClick"],"sources":["C:/Projects/frontend/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chatbot.css';\r\n\r\n\r\nexport default function Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: '👋 Hi there! I’m MathSciLAB Bot. Ask me anything about Math, Science, or study-related topics!' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMsg = { sender: 'user', text: input };\r\n    setMessages(prev => [...prev, userMsg]);\r\n    setInput('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: input })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botReply = { sender: 'bot', text: data.reply || 'Hmm... I didn’t quite catch that. Can you try again?' };\r\n      setMessages(prev => [...prev, botReply]);\r\n    } catch (err) {\r\n      setMessages(prev => [...prev, { sender: 'bot', text: '⚠️ Server error. Please try again later.' }]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-box\">\r\n        <div className=\"chatbot-header\">📚 MathSciLAB</div>\r\n\r\n        <div className=\"chatbot-messages\">\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`chatbot-message ${msg.sender}`}>\r\n              <span>{msg.text}</span>\r\n            </div>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </div>\r\n\r\n        <div className=\"chatbot-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Ask about algebra, physics, or any subject...\"\r\n            onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n          <button onClick={() => setMessages([\r\n            { sender: 'bot', text: '👋 Hi there! I’m MathSciLAB. Ask me anything about Math, Science, or study-related topics!' }\r\n          ])}>Clear</button>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}